{"version":3,"sources":["../../../../../assets/Script/models/assets/Script/models/Effect.js"],"names":["config","require","Effect","cc","Class","name","extends","Component","properties","label","default","type","Label","onLoad","tywx","Timer","setTimer","remove","string","node","destroy","ctor","num","update","dt","module","exports"],"mappings":";;;;;;AAAA;;;;;;AAMA;AACA,IAAIA,SAASC,QAAQ,cAAR,CAAb;;AAEA,IAAIC,SAASC,GAAGC,KAAH,CAAS;AACrBC,UAAK,MADgB;AAElBC,aAASH,GAAGI,SAFM;AAGlBC,gBAAY;AACRC,eAAO;AACHC,qBAAQ,IADL;AAEHC,kBAAMR,GAAGS;AAFN;AADC,KAHM;;AAUlB;;;;;;;;;;;AAWAC,YAAQ,kBAAY;AAChBC,aAAKC,KAAL,CAAWC,QAAX,CAAoB,IAApB,EAAyB,KAAKC,MAA9B,EAAqC,CAArC;AACA,aAAKR,KAAL,CAAWS,MAAX,GAAoB,GAApB;AACH,KAxBiB;;AA0BlB;;;;;;;;;;;AAWAD,YAAO,kBAAU;AACd,aAAKE,IAAL,CAAUC,OAAV;AACF,KAvCiB;;AA0ClB;;;;;;;;;;;AAWAC,UAAM,cAASC,GAAT,EAAa,CAElB,CAvDiB;;AA0DlB;;;;;;;;;;;AAWAC,YAAQ,gBAAUC,EAAV,EAAc,CAErB;;AAvEiB,CAAT,CAAb;;AA6EAC,OAAOC,OAAP,GAAiBxB,MAAjB","file":"Effect.js","sourceRoot":"../../../../../assets/Script/models","sourcesContent":["/*\n    游戏的逻辑UI\n    游戏的操作的主要逻辑在这个module里面编写\n    created by gyc on 2018-08-01.\n*/\n\n// 倒入游戏涉及到的module\nvar config = require(\"AddOneConfig\")\n \nvar Effect = cc.Class({\n\tname:\"node\",\n    extends: cc.Component,\n    properties: {\n        label: {\n            default:null,\n            type: cc.Label\n        } \n    },\n\n    /*\n        调用: 节点加载完成后的回调\n        功能: 节点加载完成后的一些UI逻辑处理\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 系统自带\n    */\n    onLoad: function () {\n        tywx.Timer.setTimer(this,this.remove,5);\n        this.label.string = \"0\";\n    },\n    \n    /*\n        调用: 不需要控件的时候调用\n        功能: 从内存中删除node\n        参数: [\n           无\n        ]\n        返回值:[\n           无\n        ]\n        思路: 游戏逻辑需要\n    */\n    remove:function(){\n       this.node.destroy()\n    },\n\n    \n    /*\n        调用: 系统new 的时候调用。\n        功能: 该类的构造函数 可用于自身变量的初始化\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 系统自带\n    */\n    ctor: function(num){\n\n    },\n\n\n    /*\n        调用: 每一帧都调用的逻辑。\n        功能: 渲染当前的场景树\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 系统自带\n    */\n    update: function (dt) {\n         \n    },\n\n\n \n});\n\nmodule.exports = Effect;\n\n\n\n\n\n\n"]}