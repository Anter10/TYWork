{"version":3,"sources":["Audio.js"],"names":["curAudioState","cc","Class","extends","Component","properties","audioSource","type","AudioSource","default","audioRes","Sprite","onLoad","audioEngine","setMaxWebAudioSize","controlAudio","pause","play","changeButtonTexture","stop","resume","console","log","node","active"],"mappings":";;;;;;AAAA;;;;;AAKA,IAAIA,gBAAgB,CAApB,EAAuB;;AAEvBC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;AAELC,gBAAY;AACRC,qBAAa;AACTC,kBAAMN,GAAGO,WADA;AAETC,qBAAS;AAFA,SADL;AAKRC,kBAAS;AACLD,qBAAQ,EADH;AAELF,kBAAKN,GAAGU;AAFH;AALD,KAFP;;AAaL;;;;;;;;;;;AAWAC,YAAQ,kBAAY;AACfX,WAAGY,WAAH,CAAeC,kBAAf,CAAkC,OAAK,EAAvC;AACJ,KA1BI;;AA4BN;;;;;;;;;;;AAWCC,kBAAc,wBAAU;AACrB,YAAGf,iBAAiB,CAApB,EAAsB;AACnB,iBAAKgB,KAAL;AACAhB,4BAAgB,CAAhB;AACF,SAHD,MAGM,IAAGA,iBAAiB,CAApB,EAAsB;AACzB,iBAAKiB,IAAL;AACAjB,4BAAgB,CAAhB;AACF;AACD;AACA,aAAKkB,mBAAL;AACF,KAjDI;;AAmDL;;;;;;;;;;;AAWAD,UAAM,gBAAY;AACd,aAAKX,WAAL,CAAiBW,IAAjB;AACH,KAhEI;;AAmEL;;;;;;;;;;;AAWAD,WAAO,iBAAY;AACf,aAAKV,WAAL,CAAiBU,KAAjB;AACH,KAhFI;;AAkFL;;;;;;;;;;;AAWAG,UAAM,gBAAY;AACd,aAAKb,WAAL,CAAiBa,IAAjB;AACH,KA/FI;;AAiGL;;;;;;;;;;;AAWAC,YAAQ,kBAAY;AAChB,aAAKd,WAAL,CAAiBc,MAAjB;AACH,KA9GI;;AAiHL;;;;;;;;;;;AAWAF,yBAAqB,+BAAU;AAC3BG,gBAAQC,GAAR,CAAY,KAAKZ,QAAL,CAAc,CAAd,CAAZ;AACA,YAAGV,iBAAiB,CAApB,EAAsB;AACnB,iBAAKU,QAAL,CAAc,CAAd,EAAiBa,IAAjB,CAAsBC,MAAtB,GAA+B,KAA/B;AACA,iBAAKd,QAAL,CAAc,CAAd,EAAiBa,IAAjB,CAAsBC,MAAtB,GAA+B,IAA/B;AACF,SAHD,MAGM,IAAGxB,iBAAiB,CAApB,EAAsB;AACzB,iBAAKU,QAAL,CAAc,CAAd,EAAiBa,IAAjB,CAAsBC,MAAtB,GAA+B,IAA/B;AACA,iBAAKd,QAAL,CAAc,CAAd,EAAiBa,IAAjB,CAAsBC,MAAtB,GAA+B,KAA/B;AACF,SAHK,MAGD;AACDH,oBAAQC,GAAR,CAAY,MAAZ;AACH;AACJ;;AAvII,CAAT","file":"Audio.js","sourceRoot":"../../../../../assets/Script/models","sourcesContent":["/*\n   声音播放控件控制按钮\n   声音文件在不同的预设里面设置\n   created by gyc on 2018-08-02.\n*/\nvar curAudioState = 1; // 1: 默认状态可以播放音乐\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        audioSource: {\n            type: cc.AudioSource,\n            default: null\n        },\n        audioRes:{\n            default:[],\n            type:cc.Sprite,\n        }\n    },\n\n    /*\n        调用: 节点加载完成后的回调\n        功能: 节点加载完成后的一些UI逻辑处理\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 系统自带\n    */\n    onLoad: function () {\n         cc.audioEngine.setMaxWebAudioSize(1024*10);\n    },\n\n   /*\n        调用: 点击按钮的时候调用\n        功能: 控制声音的开关和显示\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    controlAudio: function(){\n       if(curAudioState == 1){\n          this.pause();\n          curAudioState = 0;\n       }else if(curAudioState == 0){\n          this.play();\n          curAudioState = 1;\n       }\n       // 控制显示\n       this.changeButtonTexture();\n    },\n  \n    /*\n        调用: 由控制方法调用\n        功能: 播放声音\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    play: function () {\n        this.audioSource.play();\n    },\n    \n\n    /*\n        调用: 由控制方法调用\n        功能: 暂停声音\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    pause: function () {\n        this.audioSource.pause();\n    },\n    \n    /*\n        调用: 由控制方法调用\n        功能: 停止当前播放声音\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    stop: function () {\n        this.audioSource.stop();\n    },\n    \n    /*\n        调用: 由控制方法调用\n        功能: 恢复声音\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    resume: function () {\n        this.audioSource.resume();\n    },\n\n\n    /*\n        调用: 点击按钮的时候调用\n        功能: 更换Button的显示纹理\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    changeButtonTexture: function(){\n        console.log(this.audioRes[0]);\n        if(curAudioState == 0){\n           this.audioRes[0].node.active = false;\n           this.audioRes[1].node.active = true;\n        }else if(curAudioState == 1){\n           this.audioRes[0].node.active = true;\n           this.audioRes[1].node.active = false;\n        }else{\n            console.log(\"状态不对\");\n        }\n    }\n    \n});\n\n\n\n\n\n"]}