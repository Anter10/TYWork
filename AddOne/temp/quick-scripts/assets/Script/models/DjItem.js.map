{"version":3,"sources":["DjItem.js"],"names":["cc","Class","extends","Component","properties","djName","default","type","Label","djNumber","djIcon","Sprite","setData","data","flushView","flushIcon","flushName","flushNumber","getData","showUse","useCallBack","setUseCall","useclickcall","clickCall","console","log","JSON","stringify","clickcallBack","setClickCall","clickcall","clickcalll","onLoad","string","num","name"],"mappings":";;;;;;AAAA;;;;AAIAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAO;AACHC,qBAAQ,IADL;AAEHC,kBAAKP,GAAGQ;AAFL,SADC;AAKRC,kBAAS;AACLH,qBAAQ,IADH;AAELC,kBAAKP,GAAGQ;AAFH,SALD;AASRE,gBAAO;AACHJ,qBAAQ,IADL;AAEHC,kBAAKP,GAAGW;AAFL;;AATC,KAHP;;AAmBL;;;;;;;;;;;AAWAC,aAAQ,iBAASC,IAAT,EAAc;AAClB,aAAKA,IAAL,GAAYA,IAAZ;AACA,aAAKC,SAAL;AACH,KAjCI;;AAmCL;;;;;;;;;;;AAWAA,eAAU,qBAAU;AACjB,aAAKC,SAAL;AACA,aAAKC,SAAL;AACA,aAAKC,WAAL;AACF,KAlDI;;AAoDL;;;;;;;;;;;AAWAC,aAAQ,mBAAU;AACd,eAAO,KAAKL,IAAZ;AACH,KAjEI;;AAmEL;;;;;;;;;;;AAWAM,aAAS,mBAAU;AACf,YAAG,KAAKC,WAAR,EAAoB;AAChB,iBAAKA,WAAL;AACH;AACJ,KAlFI;AAmFN;;;;;;;;;;;AAWCC,gBAAW,oBAASC,YAAT,EAAsB;AAC7B,aAAKF,WAAL,GAAmBE,YAAnB;AACH,KAhGI;;AAmGL;;;;;;;;;;;AAWAC,eAAU,qBAAU;AAChBC,gBAAQC,GAAR,CAAY,eAAaC,KAAKC,SAAL,CAAe,KAAKd,IAApB,CAAzB;AACA,YAAG,KAAKe,aAAR,EAAsB;AACnB,iBAAKA,aAAL;AACF;AACJ,KAnHI;;AAqHL;;;;;;;;;;;AAWAC,kBAAa,sBAASC,SAAT,EAAmB;AAC9B,aAAKF,aAAL,GAAqBG,UAArB;AACD,KAlII;;AAoIL;;;;;;;;;;;AAWAC,UA/IK,oBA+IK;AACN;AACH,KAjJI;;;AAoJL;;;;;;;;;;;AAWAf,iBAAY,uBAAU;AAClB,aAAKR,QAAL,CAAcwB,MAAd,GAAuB,KAAKpB,IAAL,CAAUqB,GAAjC;AACH,KAjKI;;AAmKN;;;;;;;;;;;AAWClB,eAAU,qBAAU;AAChB,aAAKX,MAAL,CAAY4B,MAAZ,GAAqB,KAAKpB,IAAL,CAAUsB,IAA/B;AACH,KAhLI;;AAkLL;;;;;;;;;;;AAWApB,eAAU,qBAAU;AAChB,aAAKV,MAAL,CAAY4B,MAAZ,GAAqB,KAAKpB,IAAL,CAAUsB,IAA/B;AACH;;AA/LI,CAAT","file":"DjItem.js","sourceRoot":"../../../../../assets/Script/models","sourcesContent":["/*\n   游戏中的道具class\n   created by gyc on 2018-08-09.\n*/ \ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        djName:{\n            default:null,\n            type:cc.Label,\n        },\n        djNumber:{\n            default:null,\n            type:cc.Label,\n        },\n        djIcon:{\n            default:null,\n            type:cc.Sprite,\n        },\n        \n    },\n   \n    /*\n        调用: 道具数据变化时\n        功能: 设置道具的数据\n        参数: [\n            data: 道具的当前数据 type:{}\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    setData:function(data){\n        this.data = data;\n        this.flushView();\n    },\n\n    /*\n        调用: 数据更新的时候调用\n        功能: 刷新当前道具的显示视图\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    flushView:function(){\n       this.flushIcon();\n       this.flushName();\n       this.flushNumber();\n    },\n\n    /*\n        调用: 手动调用\n        功能: 得到道具当前的数据\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    getData:function(){\n        return this.data;\n    },\n    \n    /*\n        调用: 点击道具\n        功能: 点击道具展示道具的使用方法\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    showUse: function(){\n        if(this.useCallBack){\n            this.useCallBack()\n        }\n    },\n   /*\n        调用: 节点创建完成后手动调用\n        功能: 设置点击道具的的回调\n        参数: [\n            clickcall: 点击道具的回调函数 type:Function\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    setUseCall:function(useclickcall){\n        this.useCallBack = useclickcall;\n    },\n    \n\n    /*\n        调用: 点击道具\n        功能: 点击道具回调的方法\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    clickCall:function(){\n        console.log(\"当前点击的数据 = \"+JSON.stringify(this.data))\n        if(this.clickcallBack){\n           this.clickcallBack()\n        }\n    },\n   \n    /*\n        调用: 节点创建完成后手动调用\n        功能: 设置点击道具的的回调\n        参数: [\n            clickcall: 点击道具的回调函数 type:Function\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    setClickCall:function(clickcall){\n      this.clickcallBack = clickcalll;\n    },\n    \n    /*\n        调用: 系统自动调用\n        功能: 处理界面加载完成后的逻辑\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 系统自带\n    */\n    onLoad () {\n        // this.data = {};\n    },\n\n\n    /*\n        调用: 刷新节点的时候调用\n        功能: 显示道具当前的数量\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    flushNumber:function(){\n        this.djNumber.string = this.data.num;\n    },\n\n   /*\n        调用: 刷新节点的时候调用\n        功能: 显示道具当前的名称\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    flushName:function(){\n        this.djName.string = this.data.name;\n    },\n\n    /*\n        调用: 刷新节点的时候调用\n        功能: 显示道具当前的图标\n        参数: [\n            无\n        ]\n        返回值:[\n            无\n        ]\n        思路: 逻辑需要\n    */\n    flushIcon:function(){\n        this.djName.string = this.data.name;\n    },\n  \n \n    \n});\n"]}